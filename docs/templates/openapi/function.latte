{*
ApiGen 3.0dev - API documentation generator for PHP 5.3+

Copyright (c) 2010-2011 David Grudl (http://davidgrudl.com)
Copyright (c) 2011-2012 Jaroslav Hanslík (https://github.com/kukulich)
Copyright (c) 2011-2012 Ondřej Nešpor (https://github.com/Andrewsville)

For the full copyright and license information, please view
the file LICENSE.md that was distributed with this source code.
*}
{layout '@layout.latte'}
{var $active = 'function'}

{block #title}{if $function->deprecated}Deprecated {/if}Function {$function->name}{/block}

{block #content}
<div id="content" class="function">
	<h1 n:class="$function->deprecated ? deprecated">Function {$function->shortName}</h1>

	{if $function->valid}

	<div class="description" n:if="$template->longDescription($function)">
	{!$function|longDescription}
	</div>

	<div class="info">
		{if $function->inNamespace()}<b>Namespace:</b> {!$function->namespaceName|namespaceLinks}<br>{/if}
		{if $function->inPackage()}<b>Package:</b> {!$function->packageName|packageLinks}<br>{/if}
		{foreach $template->annotationSort($template->annotationFilter($function->annotations, array('param', 'return', 'throws'))) as $annotation => $values}
			{foreach $values as $value}
				<b>{$annotation|annotationBeautify}{if $value}:{/if}</b>
				{!$value|annotation:$annotation:$function}<br>
			{/foreach}
		{/foreach}
		<b>Located at</b> <a n:tag-if="$config->sourceCode" href="{$function|sourceUrl}" title="Go to source code">{$function->fileName|relativePath}</a><br>
	</div>

	{var $annotations = $function->annotations}

	<div class="section" n:if="$function->numberOfParameters">
		<h3>Parameters summary</h3>
		<table class="summary">
		<tr n:foreach="$function->parameters as $parameter" id="${$parameter->name}">
			<td class="name"><code>{!$parameter->typeHint|typeLinks:$function}</code></td>
			<td class="value"><code>{block|strip}
				<var>{if $parameter->passedByReference}&amp; {/if}${$parameter->name}</var>{if $parameter->defaultValueAvailable} = {!$parameter->defaultValueDefinition|highlightPHP:$function}{elseif $parameter->unlimited},…{/if}
			{/block}</code></td>
			<td>{$parameter->description|description:$function}</td>
		</tr>
		</table>
	</div>

	<div class="section" n:if="isset($annotations['return']) && 'void' !== $annotations['return'][0]">
		<h3>Return value summary</h3>
		<ul>
			<li>
				<span class="name"><code>
					{!$annotations['return'][0]|typeLinks:$function}
				</code></span>
				<span>
					{!$annotations['return'][0]|description:$function}
				</span>
			</li>
		</ul>
	</div>

	<div class="section" n:ifset="$annotations['throws']">
		<h3>Thrown exceptions summary</h3>
		<ul>
			<li n:foreach="$annotations['throws'] as $throws">
				<span class="name"><code>
					{!$throws|typeLinks:$function}
				</code></span>
				<span>
					{!$throws|description:$function}
				</span>
			</li>
		</ul>
	</div>

	{else}
		<div class="invalid">
			<p>
				Documentation of this function could not be generated.
			</p>
			<p>
				Function was originally declared in {$function->fileName|relativePath} and is invalid because of:
			</p>
			<ul>
				<li n:foreach="$function->reasons as $reason">Function was redeclared in {$reason->getSender()->getFileName()|relativePath}.</li>
			</ul>
		</div>
	{/if}
</div>
{/block}
